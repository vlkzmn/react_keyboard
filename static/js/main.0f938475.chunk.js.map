{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyValue","handleDocumentPressKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,SAAU,IAFd,EAaEC,uBAAyB,SAACC,GACxB,EAAKC,SAAS,CAAEH,SAAUE,EAAME,OAdpC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,0BAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,0BAV/C,oBAiBE,WACE,IAAQD,EAAaO,KAAKR,MAAlBC,SAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIT,EAAQ,mCAA+BA,EAA/B,KAA6C,kCAvBjE,GAAyBU,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.0f938475.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyValue: string;\n};\n\nexport class App extends React.PureComponent {\n  state: State = {\n    keyValue: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentPressKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentPressKey);\n  }\n\n  handleDocumentPressKey = (event: KeyboardEvent) => {\n    this.setState({ keyValue: event.key });\n  };\n\n  render() {\n    const { keyValue } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { keyValue ? `The last pressed key is [${keyValue}]` : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}